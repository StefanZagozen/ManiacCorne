/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <../boards/shields/corne/boards/nice_nano.overlay>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&none  &kp Q  &kp W  &kp E     &kp R    &kp T            &kp Y      &kp U      &kp I      &kp O    &kp P            &none
&none  &kp A  &kp S  &kp D     &kp F    &kp G            &kp H      &kp J      &kp K      &kp L    &kp RIGHT_SHIFT  &none
&none  &kp Z  &kp X  &kp C     &kp V    &kp B            &kp N      &kp M      &kp COMMA  &kp DOT  &kp FSLH         &none
                     &kp LGUI  &kp DEL  &kp BACKSPACE    &kp SPACE  &kp ENTER  &kp RALT
            >;
        };

        numblock {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp F4   &kp F3   &kp F2   &kp F1  &none     &kp KP_MULTIPLY  &kp KP_N7  &kp KP_NUMBER_8  &kp KP_N9  &kp KP_PLUS   &trans
&trans  &kp F8   &kp F7   &kp F6   &kp F5  &none     &kp KP_DIVIDE    &kp KP_N4  &kp KP_N5        &kp KP_N6  &kp KP_MINUS  &trans
&trans  &kp F12  &kp F11  &kp F10  &kp F9  &trans    &kp KP_NUMLOCK   &kp KP_N1  &kp KP_N2        &kp KP_N3  &kp KP_DOT    &trans
                          &trans   &trans  &trans    &trans           &trans     &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp GRAVE          &kp RS(GRAVE)        &kp BACKSLASH  &kp RS(BACKSLASH)  &trans              &kp RA(RIGHT_BRACKET)  &kp LS(N8)     &kp LS(N9)        &none          &kp LS(NUMBER_0)  &trans
&trans  &kp RS(N1)         &kp RS(NUMBER_2)     &kp RS(N3)     &kp RS(N4)         &kp RS(NUMBER_5)    &kp LS(NUMBER_6)       &kp RA(EQUAL)  &kp RA(NUMBER_9)  &kp LS(EQUAL)  &kp LS(MINUS)     &trans
&trans  &kp RA(BACKSLASH)  &kp LS(NON_US_BSLH)  &trans         &trans             &trans              &kp UNDER              &kp RA(N7)     &kp RA(NUMBER_0)  &kp LS(EQUAL)  &kp BACKSLASH     &trans
                                                &trans         &trans             &trans              &trans                 &trans         &trans
            >;
        };
    };
};
